#BlueJ class context
comment0.target=CaesarCipher
comment1.params=text\ s
comment1.target=java.lang.StringBuffer\ encrypt(java.lang.String,\ int)
comment1.text=public\ class\ CaesarCipherMain\ {\r\n\ \ \ \ public\ static\ final\ String\ alph\ \=\ "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\ .,?\!;\:()";\r\n\ \ \ \ //\ static\ because\ all\ other\ functions\ are\ static,\ and\ we\ can't\ reference\ from\ a\r\n\ \ \ \ //\ non-static\r\n\ \r\n\ \ \ \ public\ static\ String\ encoding(String\ plainT,\ int\ shift)\ {\r\n\ \ \ \ \ \ \ \ plainT\ \=\ plainT.toLowerCase();\r\n\ \ \ \ \ \ \ \ //\ converting\ the\ text\ to\ lowercase\r\n\ \ \ \ \ \ \ \ String\ cipherT\ \=\ "";\r\n\ \ \ \ \ \ \ \ //\ initializing\ empty\ string\ to\ add\ alphabets\ iteratively\r\n\ \ \ \ \ \ \ \ for\ (int\ i\ \=\ 0;\ i\ <\ plainT.length();\ i++)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ int\ mappingV\ \=\ alph.indexOf(plainT.charAt(i));\r\n\ \ \ \ \ \ \ \ \ \ \ \ //\ value\ of\ each\ alphabet\ in\ integers\ like\ for\ A\=0,\ B\=1\ ...\r\n\ \ \ \ \ \ \ \ \ \ \ \ int\ enVal\ \=\ (shift\ +\ mappingV)\ %\ 26;\r\n\ \ \ \ \ \ \ \ \ \ \ \ char\ Val\ \=\ alph.charAt(enVal);\ //\ the\ character\ to\ be\ replaced\r\n\ \ \ \ \ \ \ \ \ \ \ \ cipherT\ \=\ cipherT\ +\ Val;\ //\ adding\ to\ ciphertext\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ return\ cipherT;\r\n\ \ \ \ }\r\n\ \r\n\ \ \ \ //\ following\ same\ algorithm\ but\ in\ reverse\ way,\ plaintext\ becomes\r\n\ \ \ \ //\ ciphertext\ and\ vice\ versa\r\n\ \ \ \ public\ static\ String\ decoding(String\ cipherT,\ int\ shift)\ {\r\n\ \ \ \ \ \ \ \ cipherT\ \=\ cipherT.toLowerCase();\r\n\ \ \ \ \ \ \ \ //\ converting\ the\ text\ to\ lowercase\r\n\ \ \ \ \ \ \ \ String\ plainT\ \=\ "";\r\n\ \ \ \ \ \ \ \ //\ initializing\ empty\ string\ to\ add\ alphabets\ iteratively\r\n\ \ \ \ \ \ \ \ for\ (int\ i\ \=\ 0;\ i\ <\ cipherT.length();\ i++)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ int\ mappingV\ \=\ alph.indexOf(cipherT.charAt(i));\r\n\ \ \ \ \ \ \ \ \ \ \ \ int\ deVal\ \=\ (mappingV\ -\ shift)\ %\ 26;\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (deVal\ <\ 0)\ //\ to\ handle\ the\ negative\ values\r\n\ \ \ \ \ \ \ \ \ \ \ \ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ deVal\ \=\ alph.length()\ +\ deVal;\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ char\ Val\ \=\ alph.charAt(deVal);\ //\ the\ character\ to\ be\ replaced\r\n\ \ \ \ \ \ \ \ \ \ \ \ plainT\ \=\ plainT\ +\ Val;\ //\ adding\ to\ plaintext\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ return\ plainT;\r\n}
numComments=2
